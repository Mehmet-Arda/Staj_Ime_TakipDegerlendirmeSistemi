@using Staj_Ime_TakipDegerlendirmeSistemi.Models

@model StudentForgotPasswordViewModel

@{
    Layout = null;
}

<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>Şifremi Unuttum</title>
    <link href="~/Content/student_style.css" rel="stylesheet" />
    <link rel="icon" href="~/files/ms-icon-310x310.png" type="image/x-icon">
</head>
<body>
    <div class="wrapper">
        @using (Html.BeginForm("StudentForgotPassword", "Student", FormMethod.Post, new { @class = "sifremiUnuttumForm" }))
        {

            <div id="toast-result" class="toast position-fixed top-0 start-50 translate-middle fs-5 bg-danger text-white border-0 p-2" style="width: 600px; margin-top: 68px;">
                <div class="d-flex align-items-center">
                    <div class="toast-body d-flex align-items-center">
                        @if (ViewBag.result != null)
                        {
                            <span> @ViewBag.result</span>
                        }
                    </div>
                    <button class="btn btn-close btn-close-white m-auto me-2" type="button" data-bs-dismiss="toast"></button>
                </div>

            </div>



            <div class="main-input-container mt-5">
                <div class="custom-label">@Html.LabelFor(x => x.Email, new { @class = "" })</div>
                <div class="input-container d-flex justify-content-center">

                    @Html.TextBoxFor(x => x.Email, new { @class = "custom-input", id = "emailInput", autocomplete = "off" })

                </div>

                <div class="validation-container">
                    @Html.ValidationMessageFor(x => x.Email, "")
                </div>

            </div>




            <div class="main-input-container mt-3">
                <div class="custom-label">@Html.LabelFor(x => x.Kod, new { @class = "" })</div>
                <div class="input-container d-flex justify-content-center">

                    @Html.TextBoxFor(x => x.Kod, new { @class = "custom-input", autocomplete = "off" })

                </div>

                <div class="validation-container">
                    @Html.ValidationMessageFor(x => x.Kod, "")
                </div>

            </div>





            <div class="main-input-container mt-3">
                <div class="custom-label">@Html.LabelFor(x => x.Sifre, new { @class = "" })</div>
                <div class="input-container d-flex justify-content-center">

                    @Html.TextBoxFor(x => x.Sifre, new { @class = "custom-input", autocomplete = "off" })

                </div>

                <div class="validation-container">
                    @Html.ValidationMessageFor(x => x.Sifre, "")
                </div>

            </div>



            <div class="main-input-container mt-3">
                <div class="custom-label">@Html.LabelFor(x => x.SifreTekrar, new { @class = "" })</div>
                <div class="input-container d-flex justify-content-center">

                    @Html.TextBoxFor(x => x.SifreTekrar, new { @class = "custom-input", autocomplete = "off" })

                </div>

                <div class="validation-container">
                    @Html.ValidationMessageFor(x => x.SifreTekrar, "")
                </div>

            </div>



            <div class="sendEmailButtonContainer mt-5">
                <button id="sendEmailButton" class=" btn btn-danger">Email ile doğrulama kodu gönder</button>
            </div>


            <div class="sendEmailButtonContainer mt-3">
                <button type="submit" id="sendEmailButton" class=" btn btn-primary">Şifreyi Yenile</button>
            </div>



        }
    </div>

    <script src="~/Scripts/bootstrap.bundle.min.js"></script>
    <script src="~/Scripts/jquery-3.6.0.min.js"></script>
    <script src="~/Scripts/jquery.validate.min.js"></script>
    <script src="~/Scripts/jquery.validate.unobtrusive.js"></script>


    <script>
        var sendEmailButton = document.querySelector("#sendEmailButton");
        var emailInput = document.querySelector("#emailInput");

        sendEmailButton.addEventListener("click", function (e) {

            e.preventDefault();

            $.ajax({
                method: "POST",
                data: { email: emailInput.value },
                url: "/Student/StudentForgotPasswordSendEmail/"
            }).done(function (result) {


                var toastResult = document.querySelector("#toast-result");
                var toastResultBody = document.querySelector("#toast-result .toast-body");
               

                if (result == "") {
                    toastResult.classList.remove("bg-success");
                    toastResult.classList.add("bg-danger");
                    toastResultBody.innerHTML = '<span> Girilen email adresinde kayıtlı öğrenci bulunmamaktadır. </span>';
                } else {
                    toastResult.classList.remove("bg-danger");
                    toastResult.classList.add("bg-success");
                    toastResultBody.innerHTML = `<span> ${result} </span>`;
                }



                if (toastResultBody.children.length == 1) {

                    var toast = new bootstrap.Toast(toastResult, {
                        animation: true,
                        autohide: true,
                        delay: 10000
                    });
                    toast.show();
                }

            });


        })

    </script>

</body>
</html>
